name: Code Development Flow
concurrency: cm-tracking-almacenar-pin-guia
on:
    push:
        branches:
            - 'feature/kubernetes'
env:
    SERVICE_NAME: cm-tracking-almacenar-pin-guia
    PROJECT_CLUSTER_ID: cm-cluster-coordinadora-test
    PROJECT_ID: ${{ secrets.PROJECT_ID_TEST }}
    SUITE_PROJECT_ID: ${{ secrets.PROJECT_ID_SUITE_TEST }}
    CLUSTER_NAME: cm-cluster
    CLUSTER_LOCATION: us-central1
    ENV_FILE: env/test.env
    ENV: test
    HOST: apiv2-test.coordinadora.com

jobs:
    build_and_deploy:
        runs-on: ubuntu-latest
        name: Build and deploy
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Cache node modules
              uses: actions/cache@v2
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
            - name: Install and Build
              uses: ./.github/actions/build
            - name: Build tests
              uses: ./.github/actions/quality
            # - name: SonarQube Scan
            #   uses: sonarsource/sonarqube-scan-action@master
            #   with:
            #     projectBaseDir: .
            #   env:
            #     SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
            #     SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
            # - name: SonarQube Quality Gate check
            #   uses: sonarsource/sonarqube-quality-gate-action@master
            #   timeout-minutes: 5
            #   env:
            #     SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
            #   with:
            #     scanMetadataReportFile: ./.scannerwork/report-task.txt
            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@master
              with:
                  project_id: ${{ env.PROJECT_CLUSTER_ID }}
                  project_suite: ${{ env.SUITE_PROJECT_ID }}
                  service_account_key: ${{ secrets.CM_GCP_KEY }}
                  export_default_credentials: true
           # - name: Env variable
           #   run: echo "GCP_PROJECT=${{env.PROJECT_ID}}" >> ${{ env.ENV_FILE }}
           # - name: Env variable URL
           #   run: echo "URL_TRACKING_PREFIX=${{env.URL_TRACKING_PREFIX}}" >> ${{ env.ENV_FILE }}
            - name: Create ENV File
              run: cp ${{ env.ENV_FILE }} .env
            - name: Build and deploy image
              run: PROJECT_ID=$PROJECT_CLUSTER_ID COMMIT_SHA=${{ github.sha }} SERVICE_NAME=$SERVICE_NAME make deploy

    terraform:
        runs-on: ubuntu-latest
        name: Infra as Code
        needs: build_and_deploy
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Set branch-based environment variables
              uses: iamtheyammer/branch-env-vars@v1.0.3
              with:
                  GCP_PROJECT: |
                      master:${{ secrets.PROJECT_ID_PROD }}
                      testing:${{ secrets.PROJECT_ID_TEST }}
                      !default:${{ secrets.PROJECT_ID_TEST }}
            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@master
              with:
                  project_id: ${{ env.GCP_PROJECT }}
                  service_name: ${{ env.SERVICE_NAME}}
                  project_suite: ${{ env.SUITE_PROJECT_ID }}
                  host: ${{ env.HOST }}
                  service_account_key: ${{ secrets.CM_GCP_KEY }}
                  export_default_credentials: true
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v1
            - name: Init Terraform
              run: make terraform-init
            - name: Create Workspace Terraform
              run: PROJECT_ID=$GCP_PROJECT HOST=$HOST SERVICE_NAME=$SERVICE_NAME ENV=${{ env.ENV }}  make terraform-create-workspace
            - name: Apply Terraform
              run: PROJECT_ID=$GCP_PROJECT HOST=$HOST SERVICE_NAME=$SERVICE_NAME ENV=${{ env.ENV }}  make terraform-apply

    kubernetes:
        runs-on: ubuntu-latest
        name: Kubernetes
        needs: terraform
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@master
              with:
                  project_id: ${{ env.PROJECT_CLUSTER_ID }}
                  service_account_key: ${{ secrets.CM_GCP_KEY }}
                  export_default_credentials: true
            - id: get-credentials
              name: Get Credentials
              uses: google-github-actions/get-gke-credentials@main
              with:
                  cluster_name: ${{ env.CLUSTER_NAME }}
                  location: ${{ env.CLUSTER_LOCATION }}
                  credentials: ${{ secrets.CM_GCP_KEY }}
                  project_id: ${{ env.PROJECT_CLUSTER_ID }}
            - name: Setup Kustomize
              uses: imranismail/setup-kustomize@v1
              with:
                  kustomize-version: '3.9.2'
            - name: Update image
              run: kustomize edit set image PROJECT/IMAGE=gcr.io/$PROJECT_CLUSTER_ID/$SERVICE_NAME:$GITHUB_SHA
              working-directory: ./manifests/overlays/${{ env.ENV }}
            - name: Build and Deploy
              run: HOST=$HOST SERVICE_NAME=$SERVICE_NAME kustomize build . | envsubst | kubectl apply -f -
              working-directory: ./manifests/overlays//${{ env.ENV }}
            - name: Delete pods
              run: kubectl --namespace=apis delete pod -l app=$SERVICE_NAME

    # createPullRequest:
    #   runs-on: ubuntu-latest
    #   needs: kubernetes
    #   name: Testing Pull Request
    #   steps:
    #     - uses: actions/checkout@v2

    #     - name: Make changes to pull request
    #       run: date +%s > report.txt

    #     - name: Create Pull Request
    #       id: cpr
    #       uses: peter-evans/create-pull-request@v3
    #       with:
    #         token: ${{ secrets.USER_PAT }}
    #         commit-message: merging feature into dev
    #         author: ${{ github.actor }} <${{ github.actor }}>
    #         signoff: false
    #         branch: ${{ github.ref }}
    #         base: testing
    #         title: 'merge dev into testing branch'
    #         body: |
    #           Update report
    #           desplegando dev nuevos en testing. :heart:
    #         labels: |
    #           report
    #           automated pr
    #         team-reviewers: |
    #           suite-reviewer
